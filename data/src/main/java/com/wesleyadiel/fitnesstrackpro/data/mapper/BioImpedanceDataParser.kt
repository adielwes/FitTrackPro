package com.wesleyadiel.fitnesstrackpro.data.mapper

import com.wesleyadiel.fittrackerpro.domain.bioimpedance.model.BioImpedanceData
import java.time.LocalDate

/**
 * Parses raw text generated by a multimodal LLM into a structured BioimpedanceData object.
 */
object BioImpedanceDataParser {

    private val weightRegex = Regex("""(?i)weight[:\s]*([\d.]+)\s*kg""")
    private val bodyFatRegex = Regex("""(?i)body\s*fat\s*percentage[:\s]*([\d.]+)\s*%""")
    private val muscleMassRegex = Regex("""(?i)muscle\s*mass[:\s]*([\d.]+)\s*kg""")
    private val bmiRegex = Regex("""(?i)bmi[:\s]*([\d.]+)""")

    /**
     * Parses a raw response string into BioimpedanceData.
     *
     * @param text The model output.
     * @return Parsed BioimpedanceData with extracted values or nulls.
     */
    fun parse(text: String): BioImpedanceData {
        val weight = weightRegex.find(text)?.groupValues?.get(1)?.toFloatOrNull()
        val bodyFat = bodyFatRegex.find(text)?.groupValues?.get(1)?.toFloatOrNull()
        val muscleMass = muscleMassRegex.find(text)?.groupValues?.get(1)?.toFloatOrNull()
        val bmi = bmiRegex.find(text)?.groupValues?.get(1)?.toFloatOrNull()

        return BioImpedanceData(
            weight = weight,
            bodyFatPercent = bodyFat,
            muscleMass = muscleMass,
            bmi = bmi,
            date = LocalDate.now()
        )
    }
}